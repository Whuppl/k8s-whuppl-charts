apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.application.name }}
  name: {{ .Values.application.name }}
spec:
  replicas: {{ if .Values.deployment.highAvailable }}3{{ else }}1{{ end }}
  selector:
    matchLabels:
      app: {{ .Values.application.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.application.name }}
    spec:
      containers:
      - name: {{ .Values.application.name }}
        image: {{ .Values.deployment.image }}

        # [ENVIRONMENT VARIABLES]
        {{- if .Values.deployment.envFrom }}
        envFrom:
          {{- toYaml .Values.deployment.envFrom | nindent 10 }}
        {{- end }}

        # [RESOURCES]
        resources:
          {{- toYaml .Values.deployment.resources | nindent 10 }}

        # [PORTS]
        {{- if .Values.service.enabled }}
        ports:
          - containerPort: {{ .Values.service.targetPort }}
            protocol: TCP
        {{- end }}

        # [SECURITY CONTEXT] (container-level)
        securityContext:
          {{- toYaml .Values.deployment.securityContext.container | nindent 10 }}

      # [HIGH AVAILABILITY] -> also influences replicacount
      {{- if .Values.deployment.highAvailable }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ .Values.application.name }}
              topologyKey: kubernetes.io/hostname
      {{- end}}

      # [SECURITY CONTEXT] (pod-level)
      securityContext:
        {{- toYaml .Values.deployment.securityContext.pod | nindent 10 }}
      serviceAccountName: {{ .Values.application.name }}
      automountServiceAccountToken: false